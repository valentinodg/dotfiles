#!/bin/bash

PASSWORD_PREFIX="nmwiz-"
EMAIL_REGEX=".+@.+\..+"

MUTT_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/mutt"
ACC_DIR="$MUTT_DIR/acc"
MAIL_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/mail"
CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/nmwiz"
PASSWORD_STORE_DIR="${PASSWORD_STORE_DIR:-$HOME/.password-store}"

MUTTRC_LOC="$MUTT_DIR/muttrc"
MSMTPRC_LOC="${XDG_CONFIG_HOME:-$HOME/.config}/msmtp/config"
MBSYNCRC_LOC="${MBSYNCRC_LOC:-$HOME/.config/mbsync/.mbsyncrc}"

MSMTP_LOG_LOC="${XDG_CONFIG_HOME:-$HOME/.config}/msmtp/msmtp.log"
NMWIZ_DEFAULT_LOC="$MUTT_DIR/nmwiz_default.muttrc"

MARKER="# nmwwiz-autogen"

alias mbsync='mbsync -c "$MBSYNCRC_LOC"'

imessage() { tput setaf 6; echo $1; tput sgr0 ;}
emessage() { tput setaf 1; echo $1; tput sgr0 ;}

set_installer() {
    imessage "[ AUTOSET ] setting package manager"
    . /etc/os-release
    case $ID in
        void) pm_install="sudo xbps-install -Sy" ;;
        *) imessage "[ ERROR ] distro not recognized"; exit 1 ;;
    esac
}

check_cert() {
    imessage "[ AUTOCHK ] checking certificates"
    for x in "/etc/ssl/certs/ca-certificates.crt" \
        "/etc/pki/tls/certs/ca-bundle.crt" \
        "/etc/ssl/ca-bundle.pem" \
        "/etc/pki/tls/cacert.pem" \
        "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem" \
        "/etc/ssl/cert.pem" \
        "/usr/local/share/ca-certificates/"; do
        [ -f $x ] && SSL_CERT=$x && break
    done || {
        echo "ca certificates not found"
        echo "please install one or link it to /etc/ssl/certs/ca-certificates.crt"
        exit 1
    }
}

check_dep() {
    imessage "[ AUTOCHK ] checking dependency: neomutt"
    command -V neomutt >/dev/null 2>&1 || $pm_install neomutt
    imessage "[ AUTOCHK ] checking dependency: gpg2"
    command -V gpg2 >/dev/null 2>&1 || $pm_install gnupg2
    imessage "[ AUTOCHK ] checking dependency: pass"
    command -V pass >/dev/null 2>&1 || $pm_install pass
    imessage "[ AUTOCHK ] checking dependency: isync"
    command -V mbsync >/dev/null 2>&1 || $pm_install isync
    imessage "[ AUTOCHK ] checking dependency: msmtp"
    command -V msmtp >/dev/null 2>&1 || $pm_install msmtp
}

check_gpg() {
    imessage "[ AUTOCHK ] checking gpg secret keys"
    [ "$(gpg2 --list-secret-keys)" ] >/dev/null 2>&1 || {
        emessage "[ ERROR ] no gpg secret keys"
        emessage "[ RUN ] gpg2 --full-gen-key"
        exit 1
    }
    imessage "[ AUTOCHK ] checking pass secret keys"
    [ -r $PASSWORD_STORE_DIR/.gpg-id ] && 
        gpg2 --list-secret-keys $(cat $PASSWORD_STORE_DIR/.gpg-id) >/dev/null 2>&1 || {
        emessage "[ ERROR ] no pass secret keys"
        emessage "[ RUN ] pass init <gpg@email.com>"
        exit 1
        }
}

set_installer
check_cert
check_dep
check_gpg

#!/bin/bash

. nmwiz_var
nmwiz_check

ask_info() {
    imessage "[ INSERT ] full email address <your@email.com>" &&
        read -r FULL_ADDR
    while ! echo $FULL_ADDR | grep -qE $EMAIL_REGEX; do
        emessage "[ ERROR ] not a valid email address, please retype"
        imessage "[ INSERT ] full email address <your@email.com>"
        read -r FULL_ADDR
    done
    [ -f $MBSYNCRC_LOC ] && grep -q "Channel\s*$FULL_ADDR" "$MBSYNCRC_LOC" && {
        emessage "[ EXIT ] $FULL_ADDR already added"
        exit 1
    }
    # insert csv-based dictionary search function
    # for retrieving imap/smtp server addresses and
    # port numbers
    parse_dict
    [ "$SMTP_PORT" = 465 ] && TLS_LINE="tls_starttls off"
    [ -z $REAL_NAME ] && REAL_NAME="${FULL_ADDR%%@*}"
    LOGIN="${LOGIN:-$FULL_ADDR}"
    if [ -n "${PASSWORD+x}" ]; then
        create_passw
    else
        get_passw
    fi
}

parse_dict() {
    [ -f "$MUTT_SHARE_DIR/dict.csv" ] && {
        SERVER_INFO="$(grep "^{$FULL_ADDR#*@}" "$MUTT_SHARE_DIR/dict.csv" 2>/dev/null)"
        [ -z "$SERVER_INFO" ] && SERVER_INFO="$(grep "$(echo "${FULL_ADDR#*@}" | sed "s/\.[^\.]*$/\.\\\*/")" "$MUTT_SHARE_DIR/dict.csv" 2>/dev/null)"
        [ -z "$SERVER_INFO" ] && {
            emessage "[ ERROR ] $FULL_ADDR not found in $MUTT_SHARE_DIR/dict.csv"
            emessage "[ SUGST ] add (address,imap/smtp addresses,imap/smtp port #s) to $MUTT_SHARE_DIR/dict.csv"
            exit 1
        } 
        IFS=, read -r SERVICE IMAP_ADDRESS IMAP_PORT SMTP_ADDRESS SMTP_PORT << EOF
$SERVER_INFO
EOF
        kmessage "[ FOUND ] service: $SERVICE"
        kmessage "[ FOUND ] imap address: $IMAP_ADDRESS"
        kmessage "[ FOUND ] imap port #: $IMAP_PORT"
        kmessage "[ FOUND ] smtp address: $SMTP_ADDRESS"
        kmessage "[ FOUND ] smtp port #: $SMTP_PORT"
    } || {
        emessage "[ ERROR ] $MUTT_SHARE_DIR/dict.csv does not exist"
        exit 1
    }
}

create_passw() {
    echo "$PASSWORD" > "$PASSWORD_STORE_DIR/$PASSWORD_PREFIX$FULL_ADDR"
    gpg2 -qer "$(cat "$PASSWORD_STORE_DIR/.gpg-id")" "$PASSWORD_STORE_DIR/$PASSWORD_PREFIX$FULL_ADDR"
    rm -f "$PASSWORD_STORE_DIR/$PASSWORD_PREFIX$FULL_ADDR"
}

get_passw() {
    while : ; do
        pass rm -f "$PASSWORD_PREFIX$FULL_ADDR" >/dev/null 2>&1
        pass insert "$PASSWORD_PREFIX$FULL_ADDR" && break
    done
}

get_profiles() {
    unset MSMTP_HEADER
    unset MSMTP_PROFILE
    unset MBSYNC_PROFILE
    unset MUTT_PROFILE
    case "$IMAP_PORT" in
        1143) IMAP_SSL=None ;;
        143) IMAP_SSL=STARTTLS ;;
    esac

MSMTP_HEADER="defaults
auth on
tls on
tls_trust_file $SSL_CERT
logfile $MSMTP_LOG_LOC
"

MSMTP_PROFILE="account $FULL_ADDR
host $SMTP_ADDRESS
port ${SMTP_PORT:-587}
from $FULL_ADDR
user $LOGIN
passwordeval \"pass $PASSWORD_PREFIX$FULL_ADDR\"
$TLS_LINE
"
MBSYNC_PROFILE="IMAPStore $FULL_ADDR-remote
Host $IMAP_ADDRESS
Port ${IMAP_PORT:-993}
User $LOGIN
PassCmd \"pass $PASSWORD_PREFIX$FULL_ADDR\"
AuthMechs LOGIN
SSLType ${IMAP_SSL:-IMAPS}
CertificateFile $SSL_CERT

MaildirStore $FULL_ADDR-local
Subfolders Verbatim
Path ${XDG_DATA_HOME:-$HOME/.local/share}/mail/$FULL_ADDR
Inbox ${XDG_DATA_HOME:-$HOME/.local/share}/mail/$FULL_ADDR/INBOX
Flatten .

Channel $FULL_ADDR
Expunge Both
Master :$FULL_ADDR-remote:
Slave :$FULL_ADDR-local:
Patterns * !\"[Gmail]/All Mail\"
Create Both
SyncState *
MaxMessages ${maxmes:-0}
ExpireUnread no
"

if [ -z "${ONLINE+x}" ]; then
MUTT_PROFILE="set realname = \"$REAL_NAME\"
set from = \"$FULL_ADDR\"
set sendmail = \"msmtp -a $FULL_ADDR\"
alias me $REAL_NAME <$FULL_ADDR>
set folder = \"$MAIL_DIR/$FULL_ADDR\"
set header_cache = \"$CACHE_DIR/$FULL_ADDR/headers\"
set message_cachedir = \"$CACHE_DIR/$FULL_ADDR/bodies\"
set mbox_type = Maildir

bind index,pager gg noop
bind index,pager g noop
bind index,pager M noop
bind index,pager C noop
bind index gg first-entry
macro index o \"<shell-escape>nmwiz_sync $FULL_ADDR<enter>\" \"run mbsync to sync $FULL_ADDR\"
unmailboxes *
unalternates *
"
else
MUTT_PROFILE="set realname = \"$REAL_NAME\"
set from = \"$FULL_ADDR\"
set sendmail = \"msmtp -a $FULL_ADDR\"
alias me $REAL_NAME <$FULL_ADDR>
set folder = \"imaps://$LOGIN@$IMAP_ADDRESS:${IMAP_PORT:-993}\"
set imap_user = \"$LOGIN\"
set header_cache = \"$CACHE_DIR/$FULL_ADDR/headers\"
set message_cachedir = \"$CACHE_DIR/$FULL_ADDR/bodies\"
set imap_pass = \"\`pass $PASSWORD_PREFIX$FULL_ADDR\`\"

set mbox_type = Maildir
set ssl_starttls = yes
set ssl_force_tls = yes

bind index,pager gg noop
bind index,pager g noop
bind index,pager M noop
bind index,pager C noop
bind index gg first-entry
unmailboxes *
"
fi
}

write_info() {
    echo "write_info"
}

echo
ask_info
get_profiles
write_info
